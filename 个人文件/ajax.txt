Ajax 大部分是异步请求，Ajax只能向同源网址（协议，域名，端口都相同）发出HTTP请求，跨域会报错
XML可以报送各种数据，包括字符串 二进制， 而且出来HTTP还支持其他协议传输（file 和ftp）

var xhr = new XMLHttpRequest();

xhr.open('GET','/#',true);  //open方式用于制定HTTP动词，请求的网址，是否异步。
//如果设置为false，就表示这个请求是同步的。

xht.send(null);//发送HTTP请求




当请求被发送到服务器时，我们需要执行一些基于响应的任务。

每当 readyState 改变时，就会触发 onreadystatechange 事件。

readyState 属性存有 XMLHttpRequest 的状态信息。

下面是 XMLHttpRequest 对象的三个重要的属性：

属性	描述


onreadystatechange	存储函数（或函数名），每当 readyState 属性改变时，就会调用该函数。

readyState		存有 XMLHttpRequest 的状态。从 0 到 4 发生变化。

				0：请求未初始化，还没有调用 open()。 
				1：请求已经建立，但是还没有发送，还没有调用 send()。  
				2：请求已发送，正在处理中（通常现在可以从响应中获取内容头）。  
				3：请求在处理中；通常响应中已有部分数据可用了，没有全部完成。  
				4：响应已完成；您可以获取并使用服务器的响应了。

status		200: "OK" 
			404: 未找到页面


使用回调函数
回调函数是一种以参数形式传递给另一个函数的函数。
如果您的网站上存在多个 AJAX 任务，那么您应该为创建 XMLHttpRequest 对象编写一个
标准的函数，并为每个 AJAX 任务调用该函数。



如需将请求发送到服务器，我们使用 XMLHttpRequest 对象的 open() 和 send() 方法：


open(method,url,async)
：规定请求的类型、URL 以及是否异步处理请求。

	method：请求的类型；GET 或 POST

	url：文件在服务器上的位置

	async：true（异步）或 false（同步）

当使用 async=true 时，请规定在响应处于 onreadystatechange 事件中的就绪状态时执行的函数


open() 方法的url参数是服务器上文件的地址：
xmlhttp.open("GET","ajax_test.html",true);
该文件可以是任何类型的文件，比如 .txt 和 .xml，或者服务
器脚本文件，比如 .asp 和 .php （在传回响应之前，能够在服务器上执行任务）。




send(string)
将请求发送到服务器。

	string：仅用于 POST 请求


setRequestHeader(header,value)
：向请求添加 HTTP 头。

	header: 规定头的名称

	value: 规定头的值


AJAX - 服务器 响应
由于 HTTP 响应是由服务端发出的，并且服务器做出响应需要时间（比如网速慢等原因），所
以我们需要监听服务器响应的状态，然后才能进行处理。

服务器响应
如需获得来自服务器的响应，请使用 XMLHttpRequest 对象的 responseText 或 responseXML 属性。

responseText：	获得字符串形式的响应数据。
responseXML： 	获得 XML 形式的响应数据。



GET 还是 POST？
与 POST 相比，GET 更简单也更快，并且在大部分情况下都能用。

然而，在以下情况中，请使用 POST 请求：

无法使用缓存文件（更新服务器上的文件或数据库）

向服务器发送大量数据（POST 没有数据量限制）

发送包含未知字符的用户输入时，POST 比 GET 更稳定也更可靠


提示：GET请求具有以下的几个特点：

GET 请求可被缓存
GET 请求保留在浏览器历史记录中
GET 请求可被收藏为书签
GET 请求不应在处理敏感数据时使用
GET 请求有长度限制
GET 请求只应当用于取回数据

提示：POST请求的特点如下：

POST 请求不会被缓存
POST 请求不会保留在浏览器历史记录中
POST 请求不能被收藏为书签
POST 请求对数据长度没有要求


